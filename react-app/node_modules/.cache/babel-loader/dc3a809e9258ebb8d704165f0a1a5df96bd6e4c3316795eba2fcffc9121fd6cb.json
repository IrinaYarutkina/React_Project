{"ast":null,"code":"var _jsxFileName = \"/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Components/WordContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WordContext = /*#__PURE__*/createContext();\nexport function WordContextProvider({\n  children\n}) {\n  _s();\n  const [words, setWords] = useState([{\n    id: 1,\n    word: 'apple',\n    translation: 'яблоко'\n  }, {\n    id: 2,\n    word: 'book',\n    translation: 'книга'\n  }, {\n    id: 3,\n    word: 'sun',\n    translation: 'солнце'\n  }]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchWords = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:3001/words');\n      if (!response.ok) {\n        throw new Error('Ошибка загрузки слов');\n      }\n      const data = await response.json();\n      if (data.length === 0) {\n        setWords([{\n          id: 1,\n          word: 'apple',\n          translation: 'яблоко'\n        }, {\n          id: 2,\n          word: 'book',\n          translation: 'книга'\n        }, {\n          id: 3,\n          word: 'sun',\n          translation: 'солнце'\n        }]);\n      } else {\n        setWords(data);\n      }\n    } catch (err) {\n      setError(err.message || 'Неизвестная ошибка');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Добавляем useEffect, чтобы вызвать fetchWords один раз при монтировании\n  useEffect(() => {\n    fetchWords();\n  }, []);\n\n  // Остальные методы (addWord, updateWord, deleteWord)...\n\n  return /*#__PURE__*/_jsxDEV(WordContext.Provider, {\n    value: {\n      words,\n      loading,\n      error,\n      addWord,\n      updateWord,\n      deleteWord,\n      fetchWords\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(WordContextProvider, \"NntCdDiwW1aMyQy975m9DUmvgA8=\");\n_c = WordContextProvider;\nvar _c;\n$RefreshReg$(_c, \"WordContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","WordContext","WordContextProvider","children","_s","words","setWords","id","word","translation","loading","setLoading","error","setError","fetchWords","response","fetch","ok","Error","data","json","length","err","message","Provider","value","addWord","updateWord","deleteWord","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Components/WordContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const WordContext = createContext();\n\nexport function WordContextProvider({ children }) {\n    const [words, setWords] = useState([\n        { id: 1, word: 'apple', translation: 'яблоко' },\n        { id: 2, word: 'book', translation: 'книга' },\n        { id: 3, word: 'sun', translation: 'солнце' },\n    ]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const fetchWords = async () => {\n        try {\n            setLoading(true);\n            const response = await fetch('http://localhost:3001/words');\n            if (!response.ok) {\n                throw new Error('Ошибка загрузки слов');\n            }\n            const data = await response.json();\n\n            if (data.length === 0) {\n                setWords([\n                    { id: 1, word: 'apple', translation: 'яблоко' },\n                    { id: 2, word: 'book', translation: 'книга' },\n                    { id: 3, word: 'sun', translation: 'солнце' },\n                ]);\n            } else {\n                setWords(data);\n            }\n        } catch (err) {\n            setError(err.message || 'Неизвестная ошибка');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Добавляем useEffect, чтобы вызвать fetchWords один раз при монтировании\n    useEffect(() => {\n        fetchWords();\n    }, []);\n\n    // Остальные методы (addWord, updateWord, deleteWord)...\n\n    return (\n        <WordContext.Provider\n            value={{\n                words,\n                loading,\n                error,\n                addWord,\n                updateWord,\n                deleteWord,\n                fetchWords,\n            }}\n        >\n            {children}\n        </WordContext.Provider>\n    );\n}\n "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASM,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAC/B;IAAEU,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,WAAW,EAAE;EAAS,CAAC,EAC/C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE;EAAQ,CAAC,EAC7C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEC,WAAW,EAAE;EAAS,CAAC,CAChD,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACAH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MAC3C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;QACnBf,QAAQ,CAAC,CACL;UAAEC,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,OAAO;UAAEC,WAAW,EAAE;QAAS,CAAC,EAC/C;UAAEF,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,WAAW,EAAE;QAAQ,CAAC,EAC7C;UAAEF,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,KAAK;UAAEC,WAAW,EAAE;QAAS,CAAC,CAChD,CAAC;MACN,CAAC,MAAM;QACHH,QAAQ,CAACa,IAAI,CAAC;MAClB;IACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;MACVT,QAAQ,CAACS,GAAG,CAACC,OAAO,IAAI,oBAAoB,CAAC;IACjD,CAAC,SAAS;MACNZ,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACZgB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACId,OAAA,CAACC,WAAW,CAACuB,QAAQ;IACjBC,KAAK,EAAE;MACHpB,KAAK;MACLK,OAAO;MACPE,KAAK;MACLc,OAAO;MACPC,UAAU;MACVC,UAAU;MACVd;IACJ,CAAE;IAAAX,QAAA,EAEDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAAC5B,EAAA,CAxDeF,mBAAmB;AAAA+B,EAAA,GAAnB/B,mBAAmB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Components/WordList.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport * as wordsApi from ''; // импорт API-функций\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WordsContext = /*#__PURE__*/createContext();\nexport function WordsProvider({\n  children\n}) {\n  _s();\n  const [words, setWords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Получение слов\n  const loadWords = async () => {\n    setLoading(true);\n    try {\n      const data = await wordsApi.fetchWords();\n      setWords(data);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Добавление\n  const addWord = async newWord => {\n    try {\n      await wordsApi.addWord(newWord);\n      await loadWords();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Обновление\n  const updateWord = async updatedWord => {\n    try {\n      await wordsApi.updateWord(updatedWord);\n      await loadWords();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Удаление\n  const deleteWord = async id => {\n    try {\n      await wordsApi.deleteWord(id);\n      await loadWords(); // или локально удалить, но лучше перезагрузить\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    loadWords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WordsContext.Provider, {\n    value: {\n      words,\n      loading,\n      error,\n      addWord,\n      updateWord,\n      deleteWord\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(WordsProvider, \"OTr2bhw4K+x0cz+jpMoHEaGtUM8=\");\n_c = WordsProvider;\nvar _c;\n$RefreshReg$(_c, \"WordsProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","wordsApi","jsxDEV","_jsxDEV","WordsContext","WordsProvider","children","_s","words","setWords","loading","setLoading","error","setError","loadWords","data","fetchWords","err","message","addWord","newWord","updateWord","updatedWord","deleteWord","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Components/WordList.jsx"],"sourcesContent":["\nimport { createContext, useState, useEffect } from 'react';\nimport * as wordsApi from '' // импорт API-функций\n\nexport const WordsContext = createContext();\n\nexport function WordsProvider({ children }) {\n  const [words, setWords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Получение слов\n  const loadWords = async () => {\n    setLoading(true);\n    try {\n      const data = await wordsApi.fetchWords();\n      setWords(data);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Добавление\n  const addWord = async (newWord) => {\n    try {\n      await wordsApi.addWord(newWord);\n      await loadWords();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Обновление\n  const updateWord = async (updatedWord) => {\n    try {\n      await wordsApi.updateWord(updatedWord);\n      await loadWords();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Удаление\n  const deleteWord = async (id) => {\n    try {\n      await wordsApi.deleteWord(id);\n      await loadWords(); // или локально удалить, но лучше перезагрузить\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  useEffect(() => {\n    loadWords();\n  }, []);\n\n  return (\n    <WordsContext.Provider\n      value={{\n        words,\n        loading,\n        error,\n        addWord,\n        updateWord,\n        deleteWord,\n      }}\n    >\n      {children}\n    </WordsContext.Provider>\n  );\n}\n"],"mappings":";;AACA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,KAAKC,QAAQ,MAAM,EAAE,EAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAE3C,OAAO,SAASO,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMI,IAAI,GAAG,MAAMd,QAAQ,CAACe,UAAU,CAAC,CAAC;MACxCP,QAAQ,CAACM,IAAI,CAAC;MACdF,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMQ,OAAO,GAAG,MAAOC,OAAO,IAAK;IACjC,IAAI;MACF,MAAMnB,QAAQ,CAACkB,OAAO,CAACC,OAAO,CAAC;MAC/B,MAAMN,SAAS,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMG,UAAU,GAAG,MAAOC,WAAW,IAAK;IACxC,IAAI;MACF,MAAMrB,QAAQ,CAACoB,UAAU,CAACC,WAAW,CAAC;MACtC,MAAMR,SAAS,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMK,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMvB,QAAQ,CAACsB,UAAU,CAACC,EAAE,CAAC;MAC7B,MAAMV,SAAS,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACC,YAAY,CAACqB,QAAQ;IACpBC,KAAK,EAAE;MACLlB,KAAK;MACLE,OAAO;MACPE,KAAK;MACLO,OAAO;MACPE,UAAU;MACVE;IACF,CAAE;IAAAjB,QAAA,EAEDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACvB,EAAA,CAnEeF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
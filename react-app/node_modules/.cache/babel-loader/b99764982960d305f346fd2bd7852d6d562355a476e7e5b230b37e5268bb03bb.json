{"ast":null,"code":"var _jsxFileName = \"/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Components/Card.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [{\n  id: 1,\n  word: 'apple',\n  translation: 'яблоко'\n}, {\n  id: 2,\n  word: 'book',\n  translation: 'книга'\n}, {\n  id: 3,\n  word: 'sun',\n  translation: 'солнце'\n}];\nfunction WordCard() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const word = words.find(w => w.id === parseInt(id));\n  if (!word) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0421\\u043B\\u043E\\u0432\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0430 \\u0441\\u043B\\u043E\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: word.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }, this), \" \\u2014 \", word.translation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(WordCard, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = WordCard;\nexport default WordCard;\nvar _c;\n$RefreshReg$(_c, \"WordCard\");","map":{"version":3,"names":["useParams","jsxDEV","_jsxDEV","words","id","word","translation","WordCard","_s","find","w","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Components/Card.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\n\nconst words = [\n    { id: 1, word: 'apple', translation: 'яблоко' },\n    { id: 2, word: 'book', translation: 'книга' },\n    { id: 3, word: 'sun', translation: 'солнце' },\n];\n\nfunction WordCard() {\n    const { id } = useParams();\n    const word = words.find((w) => w.id === parseInt(id));\n\n    if (!word) {\n    return <div>Слово не найдено</div>;\n    }\n\n    return (\n    <div className=\"word-card\">\n        <h2>Карточка слова</h2>\n        <p><strong>{word.word}</strong> — {word.translation}</p>\n    </div>\n    );\n}\n\nexport default WordCard;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAG,CACV;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,OAAO;EAAEC,WAAW,EAAE;AAAS,CAAC,EAC/C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,MAAM;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC7C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAS,CAAC,CAChD;AAED,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEJ;EAAG,CAAC,GAAGJ,SAAS,CAAC,CAAC;EAC1B,MAAMK,IAAI,GAAGF,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACN,EAAE,KAAKO,QAAQ,CAACP,EAAE,CAAC,CAAC;EAErD,IAAI,CAACC,IAAI,EAAE;IACX,oBAAOH,OAAA;MAAAU,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClC;EAEA,oBACAd,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACtBV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBd,OAAA;MAAAU,QAAA,gBAAGV,OAAA;QAAAU,QAAA,EAASP,IAAI,CAACA;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,YAAG,EAACX,IAAI,CAACC,WAAW;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAACR,EAAA,CAdQD,QAAQ;EAAA,QACEP,SAAS;AAAA;AAAAkB,EAAA,GADnBX,QAAQ;AAgBjB,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
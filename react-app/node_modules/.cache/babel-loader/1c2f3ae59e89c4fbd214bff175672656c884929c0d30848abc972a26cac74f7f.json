{"ast":null,"code":"var _jsxFileName = \"/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Context/WordsContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WordsContext = /*#__PURE__*/createContext();\nexport function WordsProvider({\n  children\n}) {\n  _s();\n  const [words, setWords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const apiBase = 'http://itgirlschool.justmakeit.ru/api/words';\n\n  // Загрузка слов\n  const fetchWords = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(apiBase);\n      if (!response.ok) throw new Error('Ошибка при получении слов');\n      const data = await response.json();\n      setWords(data);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Добавление слова\n  const addWord = async newWord => {\n    try {\n      const response = await fetch(`${apiBase}/add`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newWord)\n      });\n      if (!response.ok) throw new Error('Ошибка при добавлении слова');\n      await fetchWords(); // Перезагрузка списка\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Обновление слова\n  const updateWord = async updatedWord => {\n    try {\n      const response = await fetch(`${apiBase}/${updatedWord.id}/update`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedWord)\n      });\n      if (!response.ok) throw new Error('Ошибка при обновлении слова');\n      await fetchWords(); // Перезагрузка списка\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Удаление слова\n  const deleteWord = async id => {\n    try {\n      const response = await fetch(`http://itgirlschool.justmakeit.ru/api/words/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Ошибка при удалении слова');\n      setWords(prev => prev.filter(w => w.id !== id));\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchWords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WordsContext.Provider, {\n    value: {\n      words,\n      loading,\n      error,\n      addWord,\n      updateWord,\n      deleteWord\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(WordsProvider, \"OTr2bhw4K+x0cz+jpMoHEaGtUM8=\");\n_c = WordsProvider;\nvar _c;\n$RefreshReg$(_c, \"WordsProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","WordsContext","WordsProvider","children","_s","words","setWords","loading","setLoading","error","setError","apiBase","fetchWords","response","fetch","ok","Error","data","json","err","message","addWord","newWord","method","headers","body","JSON","stringify","updateWord","updatedWord","id","deleteWord","prev","filter","w","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Context/WordsContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\n\nexport const WordsContext = createContext();\n\nexport function WordsProvider({ children }) {\n    const [words, setWords] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const apiBase = 'http://itgirlschool.justmakeit.ru/api/words';\n\n  // Загрузка слов\n    const fetchWords = async () => {\n        setLoading(true);\n        try {\n            const response = await fetch(apiBase);\n            if (!response.ok) throw new Error('Ошибка при получении слов');\n            const data = await response.json();\n            setWords(data);\n            setError(null);\n        } catch (err) {\n            setError(err.message);\n        } finally {\n            setLoading(false);\n        }\n    }; \n        \n  // Добавление слова\n    const addWord = async (newWord) => {\n    try {\n        const response = await fetch(`${apiBase}/add`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newWord),\n        });\n        if (!response.ok) throw new Error('Ошибка при добавлении слова');\n        await fetchWords(); // Перезагрузка списка\n    } catch (err) {\n        setError(err.message);\n    }\n};\n\n\n  // Обновление слова\n  const updateWord = async (updatedWord) => {\n    try {\n        const response = await fetch(`${apiBase}/${updatedWord.id}/update`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(updatedWord),\n        });\n        if (!response.ok) throw new Error('Ошибка при обновлении слова');\n        await fetchWords(); // Перезагрузка списка\n    } catch (err) {\n        setError(err.message);\n    }\n};\n\n  // Удаление слова\n    const deleteWord = async (id) => {\n    try {\n        const response = await fetch(`http://itgirlschool.justmakeit.ru/api/words/${id}`, { method: 'DELETE' });\n        if (!response.ok) throw new Error('Ошибка при удалении слова');\n        setWords(prev => prev.filter(w => w.id !== id));\n        setError(null);\n        } catch (err) {\n        setError(err.message);\n    }\n    };\n\n    useEffect(() => {\n    fetchWords();\n    }, []);\n\n    return (\n    <WordsContext.Provider value={{\n        words,\n        loading,\n        error,\n        addWord,\n        updateWord,\n        deleteWord\n    }}>\n        {children}\n    </WordsContext.Provider>\n    );\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,SAASM,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,OAAO,GAAG,6CAA6C;;EAE/D;EACE,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3BJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;MACrC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCZ,QAAQ,CAACW,IAAI,CAAC;MACdP,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACVT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;IACzB,CAAC,SAAS;MACNZ,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;;EAEH;EACE,MAAMa,OAAO,GAAG,MAAOC,OAAO,IAAK;IACnC,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,MAAM,EAAE;QAC3CY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;MAChC,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChE,MAAMJ,UAAU,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACVT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;IACzB;EACJ,CAAC;;EAGC;EACA,MAAMQ,UAAU,GAAG,MAAOC,WAAW,IAAK;IACxC,IAAI;MACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,IAAIkB,WAAW,CAACC,EAAE,SAAS,EAAE;QAChEP,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,WAAW;MACpC,CAAC,CAAC;MACF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChE,MAAMJ,UAAU,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACVT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;IACzB;EACJ,CAAC;;EAEC;EACE,MAAMW,UAAU,GAAG,MAAOD,EAAE,IAAK;IACjC,IAAI;MACA,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+CgB,EAAE,EAAE,EAAE;QAAEP,MAAM,EAAE;MAAS,CAAC,CAAC;MACvG,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9DV,QAAQ,CAAC0B,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;MAC/CpB,QAAQ,CAAC,IAAI,CAAC;IACd,CAAC,CAAC,OAAOS,GAAG,EAAE;MACdT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;IACzB;EACA,CAAC;EAEDtB,SAAS,CAAC,MAAM;IAChBc,UAAU,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACAZ,OAAA,CAACC,YAAY,CAACkC,QAAQ;IAACC,KAAK,EAAE;MAC1B/B,KAAK;MACLE,OAAO;MACPE,KAAK;MACLY,OAAO;MACPO,UAAU;MACVG;IACJ,CAAE;IAAA5B,QAAA,EACGA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE5B;AAACpC,EAAA,CAlFeF,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
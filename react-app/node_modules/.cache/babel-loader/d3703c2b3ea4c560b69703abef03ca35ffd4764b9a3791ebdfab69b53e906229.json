{"ast":null,"code":"var _jsxFileName = \"/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Components/Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport '../Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [{\n  id: 1,\n  word: 'apple',\n  translation: 'яблоко'\n}, {\n  id: 2,\n  word: 'book',\n  translation: 'книга'\n}, {\n  id: 3,\n  word: 'sun',\n  translation: 'солнце'\n}];\nfunction Card() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const word = words.find(w => w.id === parseInt(id));\n  const [showTranslation, setShowTranslation] = useState(false);\n  if (!word) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0421\\u043B\\u043E\\u0432\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"english-word\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u0421\\u043B\\u043E\\u0432\\u043E:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 37\n        }, this), \" \", word.word]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), !showTranslation ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"word-list-button\",\n        onClick: () => setShowTranslation(true),\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"translation\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 38\n        }, this), \" \", word.translation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"kRcIe61fY8rwZoVry3nRkDSssIo=\", false, function () {\n  return [useParams];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useParams","Link","jsxDEV","_jsxDEV","words","id","word","translation","Card","_s","find","w","parseInt","showTranslation","setShowTranslation","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Components/Card.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport '../Card.css';\n\n\nconst words = [\n  { id: 1, word: 'apple', translation: 'яблоко' },\n  { id: 2, word: 'book', translation: 'книга' },\n  { id: 3, word: 'sun', translation: 'солнце' },\n];\n\nfunction Card() {\n  const { id } = useParams();\n  const word = words.find(w => w.id === parseInt(id));\n  const [showTranslation, setShowTranslation] = useState(false);\n\n  if (!word) {\n    return <div>Слово не найдено</div>;\n  }\n\n  return (\n    <div className=\"word-card\">\n      <div className=\"card-content\">\n        <p className=\"english-word\"><strong>Слово:</strong> {word.word}</p>\n\n        {!showTranslation ? (\n          <button\n            className=\"word-list-button\"\n            onClick={() => setShowTranslation(true)}\n          >\n            Показать перевод\n          </button>\n        ) : (\n          <p className=\"translation\"><strong>Перевод:</strong> {word.translation}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrB,MAAMC,KAAK,GAAG,CACZ;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,OAAO;EAAEC,WAAW,EAAE;AAAS,CAAC,EAC/C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,MAAM;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC7C;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAS,CAAC,CAC9C;AAED,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEJ;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAMM,IAAI,GAAGF,KAAK,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACN,EAAE,KAAKO,QAAQ,CAACP,EAAE,CAAC,CAAC;EACnD,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7D,IAAI,CAACO,IAAI,EAAE;IACT,oBAAOH,OAAA;MAAAY,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpC;EAEA,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAL,QAAA,eACxBZ,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAL,QAAA,gBAC3BZ,OAAA;QAAGiB,SAAS,EAAC,cAAc;QAAAL,QAAA,gBAACZ,OAAA;UAAAY,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACb,IAAI,CAACA,IAAI;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAElE,CAACN,eAAe,gBACfV,OAAA;QACEiB,SAAS,EAAC,kBAAkB;QAC5BC,OAAO,EAAEA,CAAA,KAAMP,kBAAkB,CAAC,IAAI,CAAE;QAAAC,QAAA,EACzC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEThB,OAAA;QAAGiB,SAAS,EAAC,aAAa;QAAAL,QAAA,gBAACZ,OAAA;UAAAY,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACb,IAAI,CAACC,WAAW;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAC3E;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACV,EAAA,CA3BQD,IAAI;EAAA,QACIR,SAAS;AAAA;AAAAsB,EAAA,GADjBd,IAAI;AA6Bb,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
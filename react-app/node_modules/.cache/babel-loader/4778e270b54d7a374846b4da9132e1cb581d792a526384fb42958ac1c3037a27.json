{"ast":null,"code":"var _jsxFileName = \"/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Components/Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { WordsContext } from '../Context/WordsContext';\nimport '../Card.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Card({\n  onViewTranslation,\n  learnedCount\n}) {\n  _s();\n  const {\n    words,\n    loading,\n    error\n  } = useContext(WordsContext);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const currentId = parseInt(id, 10);\n  console.log('words from context:', words);\n  console.log('currentId from URL:', currentId);\n  const word = words.find(w => w.id === currentId);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [viewed, setViewed] = useState(false);\n  const showTranslationBtnRef = useRef(null);\n  useEffect(() => {\n    setShowTranslation(false);\n    setViewed(false);\n    if (showTranslationBtnRef.current) {\n      showTranslationBtnRef.current.focus();\n    }\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  if (!word && words.length > 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0421\\u043B\\u043E\\u0432\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 41\n  }, this);\n  const handleShowTranslation = () => {\n    if (!viewed && onViewTranslation) {\n      onViewTranslation();\n      setViewed(true);\n    }\n    setShowTranslation(true);\n  };\n  const getPrevId = () => {\n    const currentIndex = words.findIndex(w => w.id === currentId);\n    return currentIndex === 0 ? words[words.length - 1].id : words[currentIndex - 1].id;\n  };\n  const getNextId = () => {\n    const currentIndex = words.findIndex(w => w.id === currentId);\n    return currentIndex === words.length - 1 ? words[0].id : words[currentIndex + 1].id;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        maxWidth: '420px',\n        margin: '20px auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"word-list-button\",\n        onClick: () => navigate(`/card/${getPrevId()}`),\n        children: \"\\u2190 \\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"word-list-button\",\n        onClick: () => navigate(`/card/${getNextId()}`),\n        children: \"\\u0412\\u043F\\u0435\\u0440\\u0435\\u0434 \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"english-word\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0421\\u043B\\u043E\\u0432\\u043E:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 39\n          }, this), \" \", word.english]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0422\\u0440\\u0430\\u043D\\u0441\\u043A\\u0440\\u0438\\u043F\\u0446\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 14\n          }, this), \" \", word.transcription]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), !showTranslation ? /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: showTranslationBtnRef,\n          className: \"word-list-button\",\n          onClick: handleShowTranslation,\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"translation\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u041F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 42\n            }, this), \" \", word.russian]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"word-list-button\",\n            onClick: () => setShowTranslation(false),\n            style: {\n              marginTop: '10px'\n            },\n            children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u043F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '20px',\n            fontStyle: 'italic'\n          },\n          children: [\"\\u0418\\u0437\\u0443\\u0447\\u0435\\u043D\\u043E \\u0441\\u043B\\u043E\\u0432 \\u0437\\u0430 \\u0442\\u0440\\u0435\\u043D\\u0438\\u0440\\u043E\\u0432\\u043A\\u0443: \", learnedCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"LeDNQsPQUYP/IeeUgTSDzPhzquY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Card;\nexport default Card;\n\n/* import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../Card.css';\n\nconst words = [\n  { id: 1, word: 'apple', translation: 'яблоко' },\n  { id: 2, word: 'book', translation: 'книга' },\n  { id: 3, word: 'sun', translation: 'солнце' },\n];\n\nfunction Card({ onViewTranslation, learnedCount}) {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  // id из строки в число\n  const currentId = parseInt(id, 10);\n  const word = words.find(w => w.id === currentId);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [viewed, setViewed] = useState(false);\n  const showTranslationBtnRef = useRef(null); \n\n  useEffect(() => {\n    // скрывается перевод при смене слова\n    setShowTranslation(false);\n    setViewed(false);\n    // автофокус на кнопке \"показать перевод\"\n    if (showTranslationBtnRef.current) {\n      showTranslationBtnRef.current.focus();\n    }\n  }, [id]);\n\n  if (!word) {\n    return <div>Слово не найдено</div>;\n  }\n  const handleShowTranslation = () => {\n    if (!viewed && onViewTranslation) {\n      onViewTranslation(); // увеличиваем счётчик\n      setViewed(true);\n    }\n    setShowTranslation(true);\n  };\n\n  // переход по словам\n  const goPrev = () => {\n    const prevId = currentId === words[0].id ? words[words.length - 1].id : currentId - 1;\n    navigate(`/card/${prevId}`);\n  };\n\n  const goNext = () => {\n    const nextId = currentId === words[words.length - 1].id ? words[0].id : currentId + 1;\n    navigate(`/card/${nextId}`);\n  }; \n\n  return (\n    <div>\n      \n      <div style={{ display: 'flex', justifyContent: 'space-between', maxWidth: '420px', margin: '20px auto' }}>\n        <button className=\"word-list-button\" onClick={goPrev}>← Назад</button>\n        <button className=\"word-list-button\" onClick={goNext}>Вперед →</button>\n      </div>\n\n        \n      <div className=\"word-card\">\n        <div className=\"card-content\">\n          <p className=\"english-word\"><strong>Слово:</strong> {word.word}</p>\n\n          {!showTranslation ? (\n            <button\n            ref={showTranslationBtnRef} \n              className=\"word-list-button\"\n              onClick={handleShowTranslation}\n            >\n              Показать перевод\n            </button>\n          ) : (\n            <>\n              <p className=\"translation\"><strong>Перевод:</strong> {word.translation}</p>\n              <button\n                className=\"word-list-button\"\n                onClick={() => setShowTranslation(false)}\n                style={{ marginTop: '10px' }}\n              >\n                Скрыть перевод\n              </button>\n            </>\n          )}\n          \n          <p style={{ marginTop: '20px', fontStyle: 'italic' }}>\n            Изучено слов за тренировку: {learnedCount}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card; */\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","useParams","useNavigate","WordsContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","onViewTranslation","learnedCount","_s","words","loading","error","id","navigate","currentId","parseInt","console","log","word","find","w","showTranslation","setShowTranslation","viewed","setViewed","showTranslationBtnRef","current","focus","children","fileName","_jsxFileName","lineNumber","columnNumber","length","handleShowTranslation","getPrevId","currentIndex","findIndex","getNextId","style","display","justifyContent","maxWidth","margin","className","onClick","english","transcription","ref","russian","marginTop","fontStyle","_c","$RefreshReg$"],"sources":["/Users/irinaarutkina/Desktop/worksIras/React_Project/React_Project/react-app/src/Components/Card.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { WordsContext } from '../Context/WordsContext';\nimport '../Card.css';\n\n\nfunction Card({ onViewTranslation, learnedCount }) {\n  const { words, loading, error } = useContext(WordsContext);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const currentId = parseInt(id, 10);\n  console.log('words from context:', words);\n  console.log('currentId from URL:', currentId); \n\n  const word = words.find((w) => w.id === currentId);\n\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [viewed, setViewed] = useState(false);\n  const showTranslationBtnRef = useRef(null);\n\n  useEffect(() => {\n    setShowTranslation(false);\n    setViewed(false);\n    if (showTranslationBtnRef.current) {\n      showTranslationBtnRef.current.focus();\n    }\n  }, [id]);\n\n  if (loading) return <p>Загрузка...</p>;\n  if (error) return <p>Ошибка: {error}</p>;\n  if (!word && words.length > 0) return <div>Слово не найдено</div>;\n\n  const handleShowTranslation = () => {\n    if (!viewed && onViewTranslation) {\n      onViewTranslation();\n      setViewed(true);\n    }\n    setShowTranslation(true);\n  };\n\n  const getPrevId = () => {\n    const currentIndex = words.findIndex(w => w.id === currentId);\n    return currentIndex === 0 ? words[words.length - 1].id : words[currentIndex - 1].id;\n  };\n\n  const getNextId = () => {\n    const currentIndex = words.findIndex(w => w.id === currentId);\n    return currentIndex === words.length - 1 ? words[0].id : words[currentIndex + 1].id;\n  };\n  \n  return (\n    <div>\n      <div style={{ display: 'flex', justifyContent: 'space-between', maxWidth: '420px', margin: '20px auto' }}>\n        <button className=\"word-list-button\" onClick={() => navigate(`/card/${getPrevId()}`)}>← Назад</button>\n        <button className=\"word-list-button\" onClick={() => navigate(`/card/${getNextId()}`)}>Вперед →</button>\n      </div>\n\n      <div className=\"word-card\">\n        <div className=\"card-content\">\n          <p className=\"english-word\"><strong>Слово:</strong> {word.english}</p>\n          <p><strong>Транскрипция:</strong> {word.transcription}</p>\n\n          {!showTranslation ? (\n            <button\n              ref={showTranslationBtnRef}\n              className=\"word-list-button\"\n              onClick={handleShowTranslation}\n            >\n              Показать перевод\n            </button>\n          ) : (\n            <>\n              <p className=\"translation\"><strong>Перевод:</strong> {word.russian}</p>\n              <button\n                className=\"word-list-button\"\n                onClick={() => setShowTranslation(false)}\n                style={{ marginTop: '10px' }}\n              >\n                Скрыть перевод\n              </button>\n            </>\n          )}\n\n          <p style={{ marginTop: '20px', fontStyle: 'italic' }}>\n            Изучено слов за тренировку: {learnedCount}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n\n\n\n\n/* import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../Card.css';\n\nconst words = [\n  { id: 1, word: 'apple', translation: 'яблоко' },\n  { id: 2, word: 'book', translation: 'книга' },\n  { id: 3, word: 'sun', translation: 'солнце' },\n];\n\nfunction Card({ onViewTranslation, learnedCount}) {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  // id из строки в число\n  const currentId = parseInt(id, 10);\n  const word = words.find(w => w.id === currentId);\n  const [showTranslation, setShowTranslation] = useState(false);\n  const [viewed, setViewed] = useState(false);\n  const showTranslationBtnRef = useRef(null); \n\n  useEffect(() => {\n    // скрывается перевод при смене слова\n    setShowTranslation(false);\n    setViewed(false);\n    // автофокус на кнопке \"показать перевод\"\n    if (showTranslationBtnRef.current) {\n      showTranslationBtnRef.current.focus();\n    }\n  }, [id]);\n\n  if (!word) {\n    return <div>Слово не найдено</div>;\n  }\n  const handleShowTranslation = () => {\n    if (!viewed && onViewTranslation) {\n      onViewTranslation(); // увеличиваем счётчик\n      setViewed(true);\n    }\n    setShowTranslation(true);\n  };\n\n  // переход по словам\n  const goPrev = () => {\n    const prevId = currentId === words[0].id ? words[words.length - 1].id : currentId - 1;\n    navigate(`/card/${prevId}`);\n  };\n\n  const goNext = () => {\n    const nextId = currentId === words[words.length - 1].id ? words[0].id : currentId + 1;\n    navigate(`/card/${nextId}`);\n  }; \n\n  return (\n    <div>\n      \n      <div style={{ display: 'flex', justifyContent: 'space-between', maxWidth: '420px', margin: '20px auto' }}>\n        <button className=\"word-list-button\" onClick={goPrev}>← Назад</button>\n        <button className=\"word-list-button\" onClick={goNext}>Вперед →</button>\n      </div>\n\n        \n      <div className=\"word-card\">\n        <div className=\"card-content\">\n          <p className=\"english-word\"><strong>Слово:</strong> {word.word}</p>\n\n          {!showTranslation ? (\n            <button\n            ref={showTranslationBtnRef} \n              className=\"word-list-button\"\n              onClick={handleShowTranslation}\n            >\n              Показать перевод\n            </button>\n          ) : (\n            <>\n              <p className=\"translation\"><strong>Перевод:</strong> {word.translation}</p>\n              <button\n                className=\"word-list-button\"\n                onClick={() => setShowTranslation(false)}\n                style={{ marginTop: '10px' }}\n              >\n                Скрыть перевод\n              </button>\n            </>\n          )}\n          \n          <p style={{ marginTop: '20px', fontStyle: 'italic' }}>\n            Изучено слов за тренировку: {learnedCount}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card; */ \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}